name: Deploy to Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
      
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: '3.11'
          
  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements.txt
  #         pip install pytest pytest-cov
          
  #     - name: Run tests
  #       run: |
  #         pytest --cov=./app --cov-report=xml
          
  #     - name: Upload coverage reports
  #       uses: codecov/codecov-action@v3
  #       with:
  #         file: ./coverage.xml
  #         fail_ci_if_error: true

  deploy:
    # needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Google Auth
        id: auth
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}

      - name: Authorize Docker push
        run: gcloud auth configure-docker ${{ secrets.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Container
        run: |-
          docker build -t "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ secrets.SERVICE }}
          region: ${{ secrets.REGION }}
          image: ${{ secrets.GAR_LOCATION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GAR_REPOSITORY }}/${{ secrets.SERVICE }}:${{ github.sha }}
          flags: '--allow-unauthenticated --cpu=1 --memory=512Mi --min-instances=1 --max-instances=10 --port=8000 --timeout=300s --set-env-vars=JUDGE0_API_KEY=${{ secrets.JUDGE0_API_KEY }}'

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
